from aiogram import Bot, Dispatcher, types
from aiogram.utils import executor
from config import API_TOKEN
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from handlers import start, help, recommend,inline_book_random, random_book, search_inline
from admin import register_admin
from aiogram import types, Dispatcher
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton 

bot = Bot(token=API_TOKEN)
storage = MemoryStorage()
dp = Dispatcher(bot, storage=storage)

# –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Ö–µ–Ω–¥–ª–µ—Ä—ã
inline_book_random.register_handlers_random_inline(dp)
search_inline.register_handlers_select_inline(dp)
# start.register_handlers_start(dp)
help.register_handlers_help(dp)
recommend.register_handlers_recommend(dp)
random_book.register_handlers_random(dp)
register_admin(dp)

@dp.message_handler(commands="start")
async def cmd_start(message: types.Message):
    # –°–æ–∑–¥–∞—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –ø—Ä—è–º–æ –∑–¥–µ—Å—å
    keyboard = InlineKeyboardMarkup(row_width=2)
    keyboard.add(
        InlineKeyboardButton(text="üîç –ù–∞–π—Ç–∏ –∫–Ω–∏–≥—É", callback_data="find_book"),
        InlineKeyboardButton(text="üé≤ –°–ª—É—á–∞–π–Ω–∞—è –∫–Ω–∏–≥–∞", callback_data="random_book"),
        InlineKeyboardButton(text="‚ÑπÔ∏è –ü–æ–º–æ—â—å", callback_data="help")
    )
    await message.answer(
        "–ü—Ä–∏–≤–µ—Ç! –Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ –Ω–∞–π—Ç–∏ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ –∫–Ω–∏–≥–∏ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º —è–∑—ã–∫–µ. –ò—Å–ø–æ–ª—å–∑—É–π —Å–ª–µ–¥—É—é—â–∏–µ –∫–æ–º–∞–Ω–¥—ã:\n/help, /recommend, /random_book",
        reply_markup=keyboard        # –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    )


if __name__ == "__main__":
    executor.start_polling(dp, allowed_updates=all)
